@using CoinTradeAppMVC.ViewModels

@{
	ViewData["Title"] = "SignIn";
}
@section Scripts
{
	@await Html.PartialAsync("_ValidationScriptsPartial")
}

@model SignInViewModel

<link href="~/css/style.css" rel="stylesheet"/>

<style>
	.container-check input {
		display: none;
	}

	.container-check {
		display: flex; /* Use flexbox for alignment */
		align-items: center; /* Vertically center the checkbox and label */
		position: relative;
		cursor: pointer;
		font-size: 16px; /* Adjust font size as needed */
		user-select: none;
		-webkit-tap-highlight-color: transparent;
		margin-bottom: 1rem; /* Add some margin for spacing */
	}

	/* Create a custom checkbox */
	.checkmark {
		position: relative;
		height: 1.2em; /* Slightly smaller for better fit */
		width: 1.2em;
		background-color: #eee; /* Light gray default background */
		border-radius: 0.2em; /* Slightly less rounded */
		border: 1px solid #ccc; /* Add a border */
		transition: all 0.25s;
		margin-right: 0.5em; /* Space between checkbox and label */
	}

	/* When the checkbox is checked, add a blue background */
	.container input:checked ~ .checkmark {
		background-color: #0ea5e9; /* Use Bootstrap's primary blue */
		border-color: #0ea5e9; /* Match border color */
	}

	/* Create the checkmark/indicator (hidden when not checked) */
	.checkmark:after {
		content: "";
		position: absolute;
		left: 0.35em; /* Adjusted positioning */
		top: 0.15em; /* Adjusted positioning */
		width: 0.3em;
		height: 0.6em;
		border: solid white;
		border-width: 0 0.15em 0.15em 0;
		transform: rotate(45deg);
		opacity: 0; /* Initially hidden */
		transition: opacity 0.2s ease-in-out;
	}

	/* Show the checkmark when checked */
	.container input:checked ~ .checkmark:after {
		opacity: 1;
	}

	.label-text { /* Style for the label text */
		vertical-align: middle;
	}

	.inputForm {
		border: 1.5px solid #ecedec;
		border-radius: 10px;
		height: 40px;
		width: 333px;
		display: flex;
		align-items: center;
		padding-left: 10px;
		transition: 0.2s ease-in-out;
	}

		.inputForm:focus-within {
			border: 1.5px solid #ecedec;
		}

	.form-control {
		border-radius: 25px;
	}

	.btn-login {
		background: linear-gradient(45deg, #0ea5e9, #6366f1);
		border: none;
		border-radius: 20px;
		color: white !important;
		padding: 0.75rem 2rem;
		font-weight: 600;
		font-family: 'Inter', sans-serif;
		letter-spacing: 0.5px;
		transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
		box-shadow: 0 2px 8px rgba(14, 165, 233, 0.2);
		display: inline-flex;
		align-items: center;
		justify-content: center;
		gap: 0.75rem;
		width: 333px;
		min-width: 200px;
		height: 45px;
		position: relative;
		overflow: hidden;
	}

		.btn-login:hover {
			box-shadow: 0 4px 15px rgba(14, 165, 233, 0.3);
			background: linear-gradient(45deg, #0d94d4, #585be0);
		}

		.btn-login .spinner { /* Keep this as is, it's a child of .btn-login */
			position: absolute;
			width: 20px;
			height: 20px;
			border: 2px solid transparent;
			border-top-color: #fff;
			border-radius: 50%;
			animation: spin 1s linear infinite;
			display: none; /* Initially hidden */
		}

		.btn-login.loading .button-text { /* Target .loading class on .btn-login */
			visibility: hidden; /* Hide text when loading */
		}

		.btn-login.loading .spinner { /* Target .loading class on .btn-login */
			display: block; /* Show spinner when loading */
		}

		@@keyframes spin {
		  to {
			transform: rotate(360deg);
		  }
		}

	.forgot-password {
		display: block;
		margin-top: 1rem;
		text-align: right;
		color: #0d94d4;
		text-decoration: none;
	}

		.forgot-password:hover {
			color: #0a75a8;
		}

	.login-container {
		background-color: #fff;
		padding: 2rem;
		border-radius: 8px;
		margin: auto;
		box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
		width: 100%;
		max-width: 400px;
		margin-top: 152px;
	}

		.login-container h2 {
			margin-bottom: 1.5rem;
			font-weight: 700;
			text-align: center;
		}

	.google-btn {
		border: 1px solid #dcdcdc;
		border-radius: 4px;
		padding: 10px 20px;
		display: flex;
		align-items: center;
		justify-content: center;
		width: 333px;
		margin: 20px 20px 0px 0px;
		cursor: pointer;
		text-decoration: none;
		color: #000;
		font-family: Arial, sans-serif;
		font-size: 14px;
	}

		.google-btn img {
			margin-right: 10px;
			text-decoration: none;
		}

		.google-btn:hover {
			background-color: #f1f1f1;
		}

</style>

<body>
	<section class="">
		<div class="login-container">
			<div class="row">
				<div>
					<h2>@Localizer["Login"]</h2>

					<div asp-validation-summary="ModelOnly" class="alert alert-danger" role="alert">
					</div>

					<form asp-controller="Home" asp-action="SignIn" method="post">
						<div class="mb-3">
							<label for="Email" class="form-label" asp-for="Email"></label>
							<input type="email" class="inputForm" asp-for="Email" placeholder="@Localizer["EnterYourEmail"]">
							<span class="text-danger" asp-validation-for="Email"></span>
						</div>
						<div class="mb-3">
							<label for="exampleInputPassword1" class="form-label" asp-for="Password"></label>
							<input type="password" class="inputForm" asp-for="Password" placeholder="@Localizer["EnterYourPassword"]">
							<span class="text-danger" asp-validation-for="Password"></span>
						</div>

						<div class="row">
							<div class="col-md-6">
								<label class="container-check">
									<input type="checkbox" asp-for="RememberMe">
									<div class="checkmark"></div>
									<span class="label-text" asp-for="RememberMe">@Localizer["RememberMe"]</span>
								</label>
							</div>
							<div class="col-md-6 mb-2">
								<div>
									<a class="forgot-password" asp-controller="Home" asp-action="ForgetPassword">@Localizer["ForgetPassword"]</a>
								</div>
							</div>
						</div>

						<button id="loadingButton" type="submit" class="btn-login">
							<span class="button-text">@Localizer["SignIn"]</span>
							<span class="spinner"></span>
						</button>

						<a class="btn google-btn" asp-action="GoogleLogin">
							<img src="https://img.icons8.com/color/48/000000/google-logo.png" height="20" width="20" alt="Google logo" />
							<b>@Localizer["ContinuewithGoogle"]</b>
						</a>
					</form>
				</div>
			</div>
		</div>
	</section>
</body>

<script>
	// For Loading Animation : 

	document.addEventListener('DOMContentLoaded', function () {
		const loadingButton = document.getElementById('loadingButton');

		loadingButton.addEventListener('click', function () {
			// Add the 'loading' class to the button when clicked
			loadingButton.classList.add('loading');
				
			// Simulate loading delay (replace with your actual logic, e.g., AJAX request)
			setTimeout(function () {
				// After the simulated loading, remove the 'loading' class
				loadingButton.classList.remove('loading');
			}, 5000); // 5 seconds loading simulation - adjust as needed
		});
	});


</script>
